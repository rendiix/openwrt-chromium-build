name: Build Chromium Headless for OpenWrt

on:
  workflow_dispatch:

env:
  SDK_URL: "https://downloads.openwrt.org/releases/24.10.0/targets/qualcommax/ipq807x/openwrt-sdk-24.10.0-qualcommax-ipq807x_gcc-13.3.0_musl.Linux-x86_64.tar.zst"
  PACKAGE_NAME: "chromium-headless"
  CHROMIUM_VERSION: "131.0.6778.264"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 240

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y zstd python3-pip ninja-build
        pip install gnpy

    - name: Download SDK
      run: |
        wget ${{ env.SDK_URL }} -O sdk.tar.zst
        unzstd sdk.tar.zst -o sdk.tar
        tar -xf sdk.tar
        echo "SDK_DIR=$(realpath openwrt-sdk-*)" >> $GITHUB_ENV

    - name: Prepare Chromium Package
      run: |
        mkdir -p ${{ env.SDK_DIR }}/package/${{ env.PACKAGE_NAME }}
        cat << EOF > ${{ env.SDK_DIR }}/package/${{ env.PACKAGE_NAME }}/Makefile
        include \$(TOPDIR)/rules.mk

        PKG_NAME:=${{ env.PACKAGE_NAME }}
        PKG_VERSION:=${{ env.CHROMIUM_VERSION }}
        PKG_RELEASE:=1

        PKG_SOURCE:=chromium-\$(PKG_VERSION).tar.xz
        PKG_SOURCE_URL:=https://commondatastorage.googleapis.com/chromium-browser-official/
        PKG_HASH:=skip

        PKG_BUILD_DEPENDS:=python3/host

        include \$(INCLUDE_DIR)/package.mk

        define Package/\$(PKG_NAME)
          SECTION:=net
          CATEGORY:=Network
          TITLE:=Headless Chromium
          DEPENDS:=+libnss +libevent2-core
          URL:=https://www.chromium.org
        endef

        define Build/Configure
          gn gen out --args='\\
            use_headless=true \\
            is_debug=false \\
            target_os="linux" \\
            target_cpu="arm64" \\
            symbol_level=0 \\
            disable_file_support=true'
        endef

        define Build/Compile
          ninja -C out headless_shell
          \$(STRIP) --strip-all out/headless_shell
        endef

        define Package/\$(PKG_NAME)/install
          \$(INSTALL_DIR) \$(1)/usr/bin
          \$(INSTALL_BIN) out/headless_shell \$(1)/usr/bin/chromium-headless
        endef

        \$(eval \$(call BuildPackage,\$(PKG_NAME)))
        EOF

    - name: Build Package
      run: |
        cd ${{ env.SDK_DIR }}
        export STAGING_DIR=${{ env.SDK_DIR }}/staging_dir
        export PATH=$STAGING_DIR/toolchain-aarch64_cortex-a53+neon-vfpv4_gcc-13.3.0_musl/bin:$PATH
        
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        echo "CONFIG_PACKAGE_${{ env.PACKAGE_NAME }}=y" >> .config
        make defconfig
        make package/${{ env.PACKAGE_NAME }}/compile -j$(nproc) V=s

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: chromium-headless
        path: ${{ env.SDK_DIR }}/bin/packages/qualcommax/ipq807x/${{ env.PACKAGE_NAME }}_*.ipk
