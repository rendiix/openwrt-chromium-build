name: Build Chromium Headless with Prebuilt Toolchain

on:
  workflow_dispatch:
  push:
    branches: [main]

env:
  CHROMIUM_VERSION: "131.0.6778.264"
  TOOLCHAIN_URL: "https://downloads.openwrt.org/releases/24.10.0/targets/qualcommax/ipq807x/openwrt-toolchain-24.10.0-qualcommax-ipq807x_gcc-13.3.0_musl.Linux-x86_64.tar.zst"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 180

    steps:
    - name: Setup Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y zstd python3-pip ninja-build
        pip install gnpy

    - name: Download and Extract Toolchain
      run: |
        wget ${{ env.TOOLCHAIN_URL }} -O toolchain.tar.zst
        unzstd toolchain.tar.zst -o toolchain.tar
        tar -xf toolchain.tar
        echo "TOOLCHAIN_DIR=$(realpath openwrt-toolchain-*)" >> $GITHUB_ENV
        echo "${{ env.TOOLCHAIN_DIR }}/toolchain-aarch64_cortex-a53+neon-vfpv4_gcc-13.3.0_musl/bin" >> $GITHUB_PATH

    - name: Generate Minimal Makefile
      run: |
        mkdir -p chromium-captive
        cat << 'EOF' > chromium-captive/Makefile
        include $(TOPDIR)/rules.mk

        PKG_NAME:=chromium-captive
        PKG_VERSION:=${{ env.CHROMIUM_VERSION }}
        PKG_RELEASE:=1

        PKG_SOURCE:=chromium-$(PKG_VERSION).tar.xz
        PKG_SOURCE_URL:=https://commondatastorage.googleapis.com/chromium-browser-official/
        PKG_HASH:=skip

        PKG_BUILD_DEPENDS:=python3/host

        include $(INCLUDE_DIR)/package.mk

        define Package/chromium-captive
          SECTION:=net
          CATEGORY:=Network
          TITLE:=Chromium Headless Captive
          DEPENDS:=+libnss +libevent2-core +zlib
          URL:=https://chromium.org
        endef

        define Build/Configure
          export AR=aarch64-openwrt-linux-ar
          export CC=aarch64-openwrt-linux-gcc
          export CXX=aarch64-openwrt-linux-g++
          gn gen out --args='\\
            use_headless=true \\
            is_debug=false \\
            target_os="linux" \\
            target_cpu="arm64" \\
            use_glib=false \\
            use_icu=false \\
            enable_mdns=false \\
            symbol_level=0'
        endef

        define Build/Compile
          ninja -C out headless_shell
          aarch64-openwrt-linux-strip --strip-all out/headless_shell
        endef

        define Package/chromium-captive/install
          $(INSTALL_DIR) $(1)/usr/bin
          $(INSTALL_BIN) out/headless_shell $(1)/usr/bin/chromium-captive
        endef

        $(eval $(call BuildPackage,chromium-captive))
        EOF

    - name: Build Chromium
      run: |
        export STAGING_DIR=${{ env.TOOLCHAIN_DIR }}/toolchain-aarch64_cortex-a53+neon-vfpv4_gcc-13.3.0_musl
        export PATH=$STAGING_DIR/bin:$PATH
        
        cd chromium-captive
        make -j$(nproc) V=s

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: chromium-captive
        path: |
          chromium-captive/out/headless_shell
          chromium-captive/*.ipk
